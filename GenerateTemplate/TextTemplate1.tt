<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".txt" #>


<#
const string connection = "server=localhost;database=Northwind;Trusted_Connection=True;MultipleActiveResultSets=True";
            SqlConnection con = new SqlConnection(connection);                                                                                       
            SqlCommand cmd = new SqlCommand("select table_name from INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'", con);
            if (con.State == System.Data.ConnectionState.Closed)
                con.Open();

            List<object> tableNames = new List<object>();
            SqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                tableNames.Add(dr[0]);
            }

            dr.Close();

            string pathString = @"C:\Users\narmin.psh\source\repos\GenerateTemplate\GenerateTemplate\NewFolder\myDir1";
            DirectoryInfo di = new DirectoryInfo(pathString);
            if (di.Exists)
            {
                Console.WriteLine("That path exists already.");
            }
            else
            {
                di.Create();
                Console.WriteLine("The directory was created successfully.");
            }
   
            foreach (var item in tableNames)
            {
                string path = Path.Combine(pathString, $"{item}.cs");
                if (!File.Exists(path))
                {
                    File.Create(path);
                    path = @"C:\Users\narmin.psh\source\repos\GenerateTemplate\GenerateTemplate\NewFolder\myDir1";
                }
                else
                {
                    Console.WriteLine("File \"{0}\" already exists.", item);
                }
    
                SqlCommand cmd1 = new SqlCommand($"SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME LIKE \'{item}\'", con);
                SqlDataReader dr1 = cmd1.ExecuteReader();
                while (dr1.Read())
                {
                    Console.WriteLine("____________________________________");
                    Console.WriteLine(dr1[0]);
                    Console.WriteLine(dr1[1]);
                    Console.WriteLine("____________________________________");
                }
                dr1.Close();
                Console.WriteLine("Path to my file: {0}\n", path);
            }
            con.Close();

#>